#BlueJ class context
comment0.params=first\ second
comment0.target=boolean\ addable(int[][],\ int[][])
comment0.text=\n\ Determines\ if\ the\ two\ matrix\ parameters\ can\ be\ added\ using\ matrix\ addition\n\ \n\ Precondition\:\ \ none\n\ Postcondition\:\ true\ will\ be\ returned\ if\ matrix\ addition\ is\ allowed,\ false\ otherwise\n\ \n\ @param\ \ first\ \ \ the\ first\ matrix\ to\ check\n\ @param\ \ second\ \ the\ second\ matrix\ to\ check\n
comment1.params=first\ second
comment1.target=int[][]\ add(int[][],\ int[][])
comment1.text=\n\ Add\ the\ two\ matrix\ paramters\ using\ matrix\ addition\n\ \n\ Precondition\:\ addable(first,\ second)\ returns\ true\n\ Postcondition\:\ the\ resulting\ matrix\ of\ first\ +\ second\n\ \n\ @param\ \ first\ \ \ the\ first\ matrix\ to\ add\n\ @param\ \ second\ \ the\ second\ matrix\ to\ add\n\ \n\ @throws\ IllegalArgumentException\ if\ the\ precondition\ is\ not\ met\n
comment2.params=scalar\ matrix
comment2.target=int[][]\ multiplyByScalar(int,\ int[][])
comment2.text=\n\ Performs\ multiplication\ between\ an\ integer\ and\ a\ matrix\n\ \n\ Precondition\:\ the\ matrix\ is\ populated\ and\ the\ first\ row\ is\ populated\n\ Postcondition\:\ the\ resulting\ matrix\ of\ scalar\ *\ matrix\n\ \n\ @param\ \ scalar\ \ the\ number\ to\ multiply\ by\n\ @param\ \ matrix\ \ the\ matrix\ to\ multiply\ by\ the\ scalar\n\ \n\ @throws\ IllegalArgumentException\ if\ the\ precondition\ is\ not\ met\n
comment3.params=first\ row\ second\ col
comment3.target=int\ multiply(int[][],\ int,\ int[][],\ int)
comment3.text=\n\ Multiplies\ the\ specified\ row\ of\ the\ first\ matrix\ by\ the\ specified\ column\ of\ the\ second\ matrix\n\ \n\ Precondition\:\ the\ row\ and\ column\ are\ populated\ and\ the\ same\ length\n\ Postcondition\:\ the\ resulting\ matrix\ of\ multiplying\ the\ specified\ row\ and\ column\n\ \n\ @param\ \ first\ \ the\ matrix\ that\ contains\ the\ specified\ row\ to\ multiply\n\ @param\ \ row\ \ \ \ the\ row\ to\ multiply\ from\ the\ first\ matrix\n\ @param\ \ second\ the\ matrix\ that\ contains\ the\ specified\ column\ to\ multiply\n\ @param\ \ col\ \ \ \ the\ column\ to\ multiply\ from\ the\ second\ matrix\n\ \n\ @throws\ IllegalArgumentException\ if\ the\ precondition\ is\ not\ met\n
comment4.params=first\ second
comment4.target=boolean\ multipliable(int[][],\ int[][])
comment4.text=\n\ Determines\ if\ the\ first\ and\ second\ matrices\ can\ be\ multiplied\n\ Two\ matrices\ can\ be\ multiplied\ if\ the\ number\ of\ columns\ in\ the\ first\ \n\ is\ the\ same\ as\ the\ number\ of\ rows\ in\ the\ second\n\ \n\ Precondition\:\ \ none\n\ Postcondition\:\ true\ will\ be\ returned\ if\ the\ two\ matrices\ can\ be\ multiplied,\ false\ otherwise\n\ \n\ @param\ \ first\ \ the\ first\ matrix\ to\ check\n\ @param\ \ second\ the\ second\ matrix\ to\ check\n
comment5.params=first\ second
comment5.target=int[][]\ multiply(int[][],\ int[][])
comment5.text=\n\ Multiplies\ the\ first\ matrix\ by\ the\ second\ matrix\n\ \n\ Precondition\:\ the\ first\ and\ second\ matrix\ are\ multipliable\n\ Postcondition\:\ the\ resulting\ matrix\ of\ the\ multiplication\n\ \n\ @param\ \ first\ \ the\ first\ matrix\ to\ multiply\n\ @param\ \ second\ the\ second\ matrix\ to\ multiply\n\ \n\ @throws\ IllegalArgumentException\ if\ the\ precondition\ is\ not\ met\n
comment6.params=matrix
comment6.target=boolean\ atLeastOneByOne(int[][])
comment6.text=\n\ A\ helper\ method\ to\ determine\ if\ a\ matrix\ is\ at\ least\ 1x1\n\ \n\ Precondition\:\ \ none\n\ Postcondition\:\ returns\ true\ if\ the\ matrix\ is\ at\ least\ 1\ row\ and\ 1\ column,\ false\ otherwise\n\ \n\ @param\ \ matrix\ \ the\ matrix\ to\ check\n
comment7.params=matrix
comment7.target=void\ print(int[][])
comment7.text=\n\ The\ print\ method\ is\ used\ so\ a\ matrix\ can\ be\ printed\n
comment8.params=
comment8.target=void\ test()
numComments=9
